{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.effect = this.effect.bind(this);\n  }\n  effect() {\n    () => {\n      async function getJokes() {\n        let j = [...props.jokes];\n        let seenJokes = new Set();\n        try {\n          while (j.length < numJokesToGet) {\n            let res = await axios.get(\"https://icanhazdadjoke.com\", {\n              headers: {\n                Accept: \"application/json\"\n              }\n            });\n            let {\n              status,\n              ...jokeObj\n            } = res.data;\n            if (!seenJokes.has(jokeObj.id)) {\n              seenJokes.add(jokeObj.id);\n              j.push({\n                ...jokeObj,\n                votes: 0\n              });\n            } else {\n              console.error(\"duplicate found!\");\n            }\n          }\n          this.setState({\n            jokes: j\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.state.jokes.length === 0) getJokes();\n    };\n  }\n  render() {\n    const {\n      numJokesToGet = 10\n    } = this.props;\n    const {\n      jokes\n    } = this.state;\n    this.effect();\n  }\n}\n\n// function JokeList({ numJokesToGet = 10 }) {\n//   const [jokes, setJokes] = useState([]);\n\n//   /* get jokes if there are no jokes */\n\n//   useEffect(function() {\n//     async function getJokes() {\n//       let j = [...jokes];\n//       let seenJokes = new Set();\n//       try {\n//         while (j.length < numJokesToGet) {\n//           let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//             headers: { Accept: \"application/json\" }\n//           });\n//           let { status, ...jokeObj } = res.data;\n\n//           if (!seenJokes.has(jokeObj.id)) {\n//             seenJokes.add(jokeObj.id);\n//             j.push({ ...jokeObj, votes: 0 });\n//           } else {\n//             console.error(\"duplicate found!\");\n//           }\n//         }\n//         setJokes(j);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     }\n\n//     if (jokes.length === 0) getJokes();\n//   }, [jokes, numJokesToGet]);\n\n//   /* empty joke list and then call getJokes */\n\n//   function generateNewJokes() {\n//     setJokes([]);\n//   }\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   function vote(id, delta) {\n//     setJokes(allJokes =>\n//       allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n//     );\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   if (jokes.length) {\n//     let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n//     return (\n//       <div className=\"JokeList\">\n//         <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n//           Get New Jokes\n//         </button>\n\n//         {sortedJokes.map(j => (\n//           <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n//         ))}\n//       </div>\n//     );\n//   }\n\n//   return null;\n\n// }\n\nexport default JokeList;","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","JokeList","Component","constructor","props","state","jokes","effect","bind","getJokes","j","seenJokes","Set","length","numJokesToGet","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","setState","e","log","render"],"sources":["/Users/alexandermatula/Desktop/springboard-homework/react-history/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { jokes: [] };\n    this.effect = this.effect.bind(this)\n  }\n\n  effect() {\n      () => {\n        async function getJokes() {\n          let j = [...props.jokes];\n          let seenJokes = new Set();\n          try {\n            while (j.length < numJokesToGet) {\n              let res = await axios.get(\"https://icanhazdadjoke.com\", {\n                headers: { Accept: \"application/json\" },\n              });\n              let { status, ...jokeObj } = res.data;\n\n              if (!seenJokes.has(jokeObj.id)) {\n                seenJokes.add(jokeObj.id);\n                j.push({...jokeObj, votes: 0})\n              } else {\n                console.error(\"duplicate found!\");\n              }\n            }\n            this.setState({jokes: j})\n          } catch (e) {\n            console.log(e);\n          }\n        }\n        if (this.state.jokes.length === 0) getJokes();\n      }\n  }\n\n  render() {\n    const { numJokesToGet = 10 } = this.props;\n    const { jokes } = this.state;\n\n    this.effect()\n  }\n}\n\n// function JokeList({ numJokesToGet = 10 }) {\n//   const [jokes, setJokes] = useState([]);\n\n//   /* get jokes if there are no jokes */\n\n//   useEffect(function() {\n//     async function getJokes() {\n//       let j = [...jokes];\n//       let seenJokes = new Set();\n//       try {\n//         while (j.length < numJokesToGet) {\n//           let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//             headers: { Accept: \"application/json\" }\n//           });\n//           let { status, ...jokeObj } = res.data;\n  \n//           if (!seenJokes.has(jokeObj.id)) {\n//             seenJokes.add(jokeObj.id);\n//             j.push({ ...jokeObj, votes: 0 });\n//           } else {\n//             console.error(\"duplicate found!\");\n//           }\n//         }\n//         setJokes(j);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     }\n\n//     if (jokes.length === 0) getJokes();\n//   }, [jokes, numJokesToGet]);\n\n//   /* empty joke list and then call getJokes */\n\n//   function generateNewJokes() {\n//     setJokes([]);\n//   }\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   function vote(id, delta) {\n//     setJokes(allJokes =>\n//       allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n//     );\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   if (jokes.length) {\n//     let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  \n//     return (\n//       <div className=\"JokeList\">\n//         <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n//           Get New Jokes\n//         </button>\n  \n//         {sortedJokes.map(j => (\n//           <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n//         ))}\n//       </div>\n//     );\n//   }\n\n//   return null;\n\n// }\n\nexport default JokeList;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AAEvB,MAAMC,QAAQ,SAASL,KAAK,CAACM,SAAS,CAAC;EACrCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,KAAK,EAAE;IAAG,CAAC;IAC1B,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;EACtC;EAEAD,MAAM,GAAG;IACL,MAAM;MACJ,eAAeE,QAAQ,GAAG;QACxB,IAAIC,CAAC,GAAG,CAAC,GAAGN,KAAK,CAACE,KAAK,CAAC;QACxB,IAAIK,SAAS,GAAG,IAAIC,GAAG,EAAE;QACzB,IAAI;UACF,OAAOF,CAAC,CAACG,MAAM,GAAGC,aAAa,EAAE;YAC/B,IAAIC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,4BAA4B,EAAE;cACtDC,OAAO,EAAE;gBAAEC,MAAM,EAAE;cAAmB;YACxC,CAAC,CAAC;YACF,IAAI;cAAEC,MAAM;cAAE,GAAGC;YAAQ,CAAC,GAAGL,GAAG,CAACM,IAAI;YAErC,IAAI,CAACV,SAAS,CAACW,GAAG,CAACF,OAAO,CAACG,EAAE,CAAC,EAAE;cAC9BZ,SAAS,CAACa,GAAG,CAACJ,OAAO,CAACG,EAAE,CAAC;cACzBb,CAAC,CAACe,IAAI,CAAC;gBAAC,GAAGL,OAAO;gBAAEM,KAAK,EAAE;cAAC,CAAC,CAAC;YAChC,CAAC,MAAM;cACLC,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;YACnC;UACF;UACA,IAAI,CAACC,QAAQ,CAAC;YAACvB,KAAK,EAAEI;UAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAOoB,CAAC,EAAE;UACVH,OAAO,CAACI,GAAG,CAACD,CAAC,CAAC;QAChB;MACF;MACA,IAAI,IAAI,CAACzB,KAAK,CAACC,KAAK,CAACO,MAAM,KAAK,CAAC,EAAEJ,QAAQ,EAAE;IAC/C,CAAC;EACL;EAEAuB,MAAM,GAAG;IACP,MAAM;MAAElB,aAAa,GAAG;IAAG,CAAC,GAAG,IAAI,CAACV,KAAK;IACzC,MAAM;MAAEE;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAE5B,IAAI,CAACE,MAAM,EAAE;EACf;AACF;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,eAAeN,QAAQ"},"metadata":{},"sourceType":"module"}